// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component Should Should renders correctly when variant is not solid 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#33907c",
      "borderRadius": 24,
      "borderWidth": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 23,
      "paddingVertical": 4,
      "position": "relative",
    }
  }
  testID="button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 5,
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Montserrat",
          },
          {},
          {
            "fontFamily": "Montserrat-SemiBold",
            "fontSize": 12,
            "fontWeight": "700",
            "lineHeight": 21,
          },
          {
            "color": "#33907c",
          },
          undefined,
        ]
      }
    >
      Click me
    </Text>
  </View>
</View>
`;

exports[`Button Component Should Should renders correctly when variant is not solid and color is secondary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#fff",
      "borderRadius": 24,
      "borderWidth": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 23,
      "paddingVertical": 4,
      "position": "relative",
    }
  }
  testID="button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 5,
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Montserrat",
          },
          {},
          {
            "fontFamily": "Montserrat-SemiBold",
            "fontSize": 12,
            "fontWeight": "700",
            "lineHeight": 21,
          },
          {
            "color": "#fff",
          },
          undefined,
        ]
      }
    >
      Click me
    </Text>
  </View>
</View>
`;

exports[`Button Component Should Should renders correctly when variant is solid and color is secondary 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#fff",
      "borderColor": "#fff",
      "borderRadius": 24,
      "borderWidth": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 23,
      "paddingVertical": 4,
      "position": "relative",
    }
  }
  testID="button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 5,
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Montserrat",
          },
          {
            "color": "#fff",
          },
          {
            "fontFamily": "Montserrat-SemiBold",
            "fontSize": 12,
            "fontWeight": "700",
            "lineHeight": 21,
          },
          {
            "color": "#33907c",
          },
          undefined,
        ]
      }
    >
      Click me
    </Text>
  </View>
</View>
`;

exports[`Button Component Should Should renders correctly with children 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#33907c",
      "borderColor": "#33907c",
      "borderRadius": 24,
      "borderWidth": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 23,
      "paddingVertical": 4,
      "position": "relative",
    }
  }
  testID="button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "gap": 5,
        "opacity": 1,
      }
    }
  >
    <Text
      style={
        [
          {
            "fontFamily": "Montserrat",
          },
          {
            "color": "#fff",
          },
          {
            "fontFamily": "Montserrat-SemiBold",
            "fontSize": 12,
            "fontWeight": "700",
            "lineHeight": 21,
          },
          {
            "color": "#fff",
          },
          undefined,
        ]
      }
    >
      Click me
    </Text>
  </View>
</View>
`;
